//
//  ShowTaskTodayViewController.swift
//  EisenOK
//
//  Created by –Ø—Ä–æ—Å–ª–∞–≤  on 19.06.2018.
//  Copyright ¬© 2018 UkropSoft. All rights reserved.
//

import UIKit
import CoreData

class ShowTaskTodayCategoryViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {
    
    //@IBOutlet weak var nameCategoryBar: UILabel!
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var countTasks: UILabel!
    
    public var project : Project? = nil
    var item = [Task]() // —ç—Ç–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–∞—á
    var filteredData: [Task] = [] // —ç—Ç–æ —è —Ç–∞–∫ –ø–æ–Ω—è–ª –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    var StoredResults = [NSManagedObject]()
    
    var textToShow = ""

    override func viewDidLoad() {
        super.viewDidLoad()
       
        //--- –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∏–º—è –ë–∞—Ä—É
        //self.nameCategoryBar.text = textToShow
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        
        self.loadCoreData() // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        self.tableView.reloadData()
    }

    //MARK: –ú–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    func loadCoreData() {
     
        let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
        let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Task")
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –∫–∞–∫–æ–º—É –∞—Ç—Ä–∏–±—É—Ç—É –∏—Å–∫–∞—Ç—å
        let predicate =  NSPredicate(format:"category == %@", textToShow)
        request.predicate = predicate
        
        do {
            let results =
                try context.fetch(request)
            
            StoredResults = results as! [NSManagedObject]
            
            item = try (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext.fetch(request) as! [Task]
            filteredData = item
            
            print("üëç –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –°—Ä–æ—á–Ω–æ - –í–∞–∂–Ω–æ  –ó–∞–¥–∞—á: \(StoredResults.count)")
            
        } catch let error as NSError {
            print("‚õîÔ∏è error executing fetchrequest  ", error)
        }
        //–í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        let coutTask = StoredResults.count
        countTasks.text = "–ó–∞–¥–∞—á: \(coutTask)"
        
    }
    
    //–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    @IBAction func backButton(_ sender: Any) {
        
        dismiss(animated: true, completion: nil)
        
    }
    
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 70
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return filteredData.count
    }
    
    //–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á (–∏–º—è, –≤—Ä–µ–º—è)
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "Cell") as! CustomTableViewCellTask
        
        cell.nameTask!.text = filteredData[indexPath.row].name
        cell.dateTask!.text = String(describing: filteredData[indexPath.row].date!)
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        //performSegue(withIdentifier: "showTaskSegue", sender: self)
        tableView.deselectRow(at: indexPath, animated: true)
    }
   

}
